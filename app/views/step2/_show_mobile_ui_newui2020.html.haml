- if @registrant.mail_with_esig?
  = render 'shared/signature_capture/scripts'
  = flash_messages.html_safe

= content_for :head do 
  :javascript
    $(document).ready(function() {
      var shouldSkipStep = function shouldSkipStep(currentStep) {
        return false;
      }
      
      initDynamicNav( 2, 2, #{@registrant.finish_with_state_eligible? ? 3 : 4}, {
        2: 10, //Eligibility
        3: 30, // Name & Address
        4: 65, // Identification - only if not finish-with-state-eligible
        //Download page goes up to 80%
      }, shouldSkipStep);
      $('#javascript_disabled').remove();
      
      // if (window.ga) {
      //   ga(function() {
      //     var trackers = ga.getAll();
      //     var tracker = trackers[0];
      //     if (tracker) {
      //       tracker.send('event', 'mobile-ui-ab-test', 'mobile-ui-ab-test-assignment-NEW');
      //     }
      //   });
      // }
      
      
      
    });
    

- if @registrant.has_custom_zip_code_partial?
  = render partial: @registrant.custom_zip_code_partial

= form_for(@registrant, :url => registrant_step_2_path(@registrant)) do |form|
  #dynamic-progress-bar
    .filler{style: "width: 10%"}
    .content 10%
  
  .dynamic-step#step-2
    - if @registrant.state_flow_error?
      .state-flow-error
        %h2= t("states.custom.#{@registrant.home_state_abbrev.downcase}.state_flow_error")
    
    
    %fieldset
      %legend= t 'txt.registration.mobile_ui.step_2.title'
      %p= t 'txt.registration.mobile_ui.step_2.instructions'
      
      
      %ul.flat.dob
        = render :partial=> "registrants/date_of_birth", :locals=>{:form=>form}
      
      %ul.checkbox.checkbox-step-1
        %li.spacer= "&nbsp;"
        %li.registrant-form__us-citizen__line
          %h3
            = form.check_box :us_citizen,  {data: {"client-validation-require-accept".to_sym => require_accept_message_for(form.object, :us_citizen)}}
            = form.label :us_citizen, "#{form.object.class.human_attribute_name(:us_citizen).html_safe}<span class='required'>*<span class='required--text' style='display:none;'>#{I18n.t('required')}</span></span>".html_safe
            %span.error= form.object.errors[:us_citizen].join("\n")
      - if @registrant.require_age_confirmation?
        %ul.checkbox.checkbox-step-1
          %li.spacer
          %li.registrant-form__will-be-18-by-election__line
            %h3
              = form.check_box :will_be_18_by_election
              = form.label :will_be_18_by_election
              %span.error= form.object.errors[:will_be_18_by_election].join("\n")

  .dynamic-step#step-3
    = render partial: "registrants/name_display_newui2020", locals: {form: form}
    = render :partial=> "registrants/home_address", :locals=>{:form=>form} 
  
    - if !@registrant.finish_with_state_eligible?
      = render partial: 'previous_address_block', locals: { form: form }
  
  
  .dynamic-step#step-4
    %fieldset
      %legend= t('txt.registration.mobile_ui.step_8.title')
    - if @registrant.home_state_allows_ovr_ignoring_license? && !@registrant.mail_with_esig?
      - if !@registrant.finish_with_state_eligible?
        = render :partial=> "registrants/state_id_number_newui2020", :locals=>{:form=>form} 
        = render :partial=> "registrants/race_and_party_newui2020", :locals=>{:form=>form}

    - elsif @registrant.mail_with_esig?
      = render partial: 'shared/signature_capture/form', locals: {form: form}
  
    
    %ul.flat.dob-and-phone.clear-fix
      = render :partial=> "registrants/phone", :locals=>{:form=>form}

    %fieldset.no_border.opt-ins
      = render :partial=> 'registrants/phone_opt_ins', :locals=>{:form=>form, :show_hr=>true}
      = render :partial=> 'registrants/email_opt_ins', :locals=>{:form=>form}
  
      = render :partial=>'registrants/survey_and_volunteer', :locals=>{:form=>form}

    - if @registrant.can_request_pdf_assistance? && !@registrant.mail_with_esig?
      .checkbox{style: "font-size: 150%; text-align: center;"}
        = hidden_field_tag :pdf_assistance, '0', id: :pdf_assitance_hidden
        = check_box_tag :pdf_assistance, "1", @pdf_assistance == "1"
        = label_tag :pdf_assistance, I18n.t('txt.button.download_assistance')
      

  .dynamic-navigation
    -# .back only shown when first step, .prepare only shown when last step
    .back.back--link
      .button.rollover_button
        = link_to registrant_path(@registrant) do
          %button{type: "button"}
            %span <
    .back.back--virtual 
      .button.rollover_button
        %a 
          %button{type: "button"}
            %span <
    .next.next--virtual
      .button.rollover_button
        %a 
          %button
            %span=t 'txt.button.submit'
    .next.next--link.prepare
      - if  @registrant.finish_with_state_eligible?
        .use_state_registration
          = rollover_button(:prepare, I18n.t('txt.button.submit'))
      - else
        
        = rollover_button(:prepare, I18n.t('txt.button.prepare'))
      
      
  
