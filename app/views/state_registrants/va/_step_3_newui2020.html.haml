- content_for :head do
  :javascript
    $(document).ready(function() {
      $('#javascript_disabled').remove();
      
      function toggleSsn() {
        if ($("#state_registrants_va_registrant_confirm_no_ssn:checked").length > 0 ) {
          $(".registrant-form__ssn__line").hide();
        } else {
          $(".registrant-form__ssn__line").show();
        }
      }        
      $("#state_registrants_va_registrant_confirm_no_ssn").click(toggleSsn)
      toggleSsn();      

      function toggleDln() {
        if ($("#state_registrants_va_registrant_confirm_no_dln:checked").length > 0 ) {
          $(".registrant-form__dln__line").hide();
        } else {
          $(".registrant-form__dln__line").show();
        }
      }        
      $("#state_registrants_va_registrant_confirm_no_dln").click(toggleDln)
      toggleDln();      
      
      function toggleRightToVoteRestored() {
        if ($("#state_registrants_va_registrant_convicted_of_felony_true:checked").length > 0 ) {
          $(".right-to-vote-restored").show();
        } else {
          $(".right-to-vote-restored").hide();
        }
      }
      $("#state_registrants_va_registrant_convicted_of_felony_true, #state_registrants_va_registrant_convicted_of_felony_false").click(toggleRightToVoteRestored)
      toggleRightToVoteRestored();
      
    });


= form_for(@registrant, url: update_state_registrant_path(@registrant.to_param, controller.current_state)) do |form|
  = render partial: 'state_registrants/locale_selector', locals: {form: form }
  = render partial: 'state_registrants/va/header'
  
  .declaration-text= t('states.custom.va.privacy_notice').html_safe
  
  = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_affirm_privacy_notice, class_name: "registrant-form__confirm-affirm-privacy-notice__line", required: true}
    
  %fieldset#ssn_set.block-selector
    =checkbox_block_selector form, :has_ssn, I18n.t('activerecord.attributes.state_registrants/va_registrant.has_ssn'), nil, {required: true}
    %div.block-selector__yes-selected
      %ul.flat.ssn
        = field_li(form, :ssn, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__ssn__line"}, field_options: {type: :password, size: 11, maxlength: 11} })


  %fieldset#dln_set.block-selector
    =checkbox_block_selector form, :has_dln, I18n.t('activerecord.attributes.state_registrants/va_registrant.has_dln'), nil, {required: true}
    %div.block-selector__yes-selected
      %ul.flat.ssn
        = field_li(form, :dln, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__dln__line"}, field_options: {size: 12, maxlength: 11} })
  

  %fieldset#convicted-of-felony_set.block-selector
    =checkbox_block_selector form, :convicted_of_felony, I18n.t('activerecord.attributes.state_registrants/va_registrant.convicted_of_felony'), :convicted_of_felony, {required: true}
    %div.block-selector__yes-selected
      %fieldset#right_to_vote_restored_set
        %ul.stacked
          = render partial: 'registrants/generic/checkbox_block_selector', locals: {form: form, field: :right_to_vote_restored, class_name: "registrant-form__right_to_vote_restored__line", required: true, require_accepted: true}



  = rollover_button(:next_step, I18n.t('txt.button.submit').html_safe)    
  .back    
    = link_to t('txt.button.back').html_safe, update_state_registrant_path(@registrant.to_param, controller.prev_step)