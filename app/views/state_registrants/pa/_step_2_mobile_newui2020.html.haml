-#CTW--NewUI Mobile
- content_for :head do
  :javascript
    $(document).ready(function() {
      checkboxTogglesSet($('#state_registrants_pa_registrant_change_of_name'), $('#prev_name_set'), $('#prev_name_rule'));
      checkboxTogglesSet($('#state_registrants_pa_registrant_has_mailing_address'), $('#mailing_address_set'));
      checkboxTogglesSet($('#state_registrants_pa_registrant_change_of_address'), $('#prev_address_set'));
      $('#javascript_disabled').remove();
      
      var shouldSkipStep = function shouldSkipStep(currentStep) { return false; }

      initDynamicNav( 2, 2, 5, {
        2: 5, //Eligibility
        3: 15, // Name
        4: 30, // Home Address
        5: 50, // Personal Information
        //Download page goes up to 80%
      }, shouldSkipStep);
      
      
      function togglePreviousAddressCounty() {
        if ($("#state_registrants_pa_registrant_previous_state").val()=="PA") {
          $(".registrant-form__prev-county__line").show();
        } else {
          $(".registrant-form__prev-county__line").hide();
        }
      }
      
      $("#state_registrants_pa_registrant_previous_state").change(togglePreviousAddressCounty)
      togglePreviousAddressCounty();
      
      function toggleOtherParty() {
        var party = $("#state_registrants_pa_registrant_party").val().toLowerCase()
        if (party=='other' || party=='otros') {
          $("#other_party_set").show();          
        } else {
          $("#other_party_set").hide();
        }        
      }
      
      $("#state_registrants_pa_registrant_party").change(toggleOtherParty)
      toggleOtherParty();
      
      
    });


= form_for(@registrant, url: update_state_registrant_path(@registrant.to_param,controller.current_state)) do |form|

  = render partial: 'state_registrants/locale_selector', locals: {form: form }

  = render partial: 'state_registrants/header_mobile', locals: {percentage: 5}
  
  .dynamic-step#step-2
    %fieldset
      %legend= t 'txt.registration.mobile_ui.step_2.title'
      %p= t 'txt.registration.mobile_ui.step_2.instructions'
      
    %ul.flat
      = render :partial=> "registrants/date_of_birth", :locals=>{:form=>form}
    

    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_us_citizen, class_name: "registrant-form__us-citizen__line", required: true, require_accepted: true}
  
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_will_be_18, class_name: "registrant-form__will-be-18-by-election__line", required: true, require_accepted: true}

  .dynamic-step#step-3
    = render partial: 'step2/name_only_mobile', locals: {form: form}
    %br
    %fieldset#newui_mailing_address_set.block-selector
      =checkbox_block_selector form, :change_of_name, I18n.t('activerecord.attributes.state_registrants/pa_registrant.change_of_name'), :previous_name, {required: true}
      %div.block-selector__yes-selected
        %fieldset#newui_prev_name_set
          %ul.stacked
            = field_li(form, :previous_first_name, {required: true, label_options: nil, field_options: {size: 15}, li_options: {class: 'registrant-form__prev-first-name__line'} , skip_tooltip: true })
            = field_li(form, :previous_middle_name, {required: false, label_options: nil, li_options: {class: 'registrant-form__prev-middle-name__line'}, skip_tooltip: true })
            = field_li(form, :previous_last_name, {required: true, label_options: nil, field_options: {size: 15}, li_options: {class: 'registrant-form__prev-last-name__line'} , skip_tooltip: true })

  .dynamic-step#step-4
    %fieldset
      %legend
        %span= I18n.t('txt.registration.home_address') 
        = tooltip_tag :home_address
      %ul.stacked
        = field_li(form, :registration_address_1, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__home-address__line"}})
      %ul.stacked
        = field_li(form, :registration_address_2, {skip_tooltip: true, required: false, li_options: {class: "registrant-form__home-address__line"}})
      %ul.stacked
        = field_li(form, :registration_unit_type, {skip_tooltip: true, required: :conditional, li_options: {class: "registrant-form__home-unit-type__line"}, select_options: StateRegistrants::PARegistrant::UNITS.collect{|k,v| [t("states.custom.pa.unit_type.#{k}").html_safe,k]}, field_options: {include_blank: true} })
        = field_li(form, :registration_unit_number, {skip_tooltip: true,required: false, li_options: {class: "registrant-form__home-unit-number__line"} })
      %ul.stacked
        = field_li(form, :registration_city, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-city__line"} })
        = field_li(form, :home_state_abbrev, {skip_tooltip: true,required: true, field_options: {disabled: true}, li_options: {class: "registrant-form__home-state-abbrev__line"} })
        = field_li(form, :registration_zip_code, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-zip-code__line"} })
      %ul.stacked
        = field_li(form, :registration_county, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__county__line"}, select_options: StateRegistrants::PARegistrant::COUNTIES.collect(&:titleize), field_options: {include_blank: true} })


      %fieldset#newui_mailing_address_set.block-selector
        =checkbox_block_selector form, :has_mailing_address, I18n.t('activerecord.attributes.state_registrants/pa_registrant.has_mailing_address'), nil, {required: true}
        %div.block-selector__yes-selected
          %ul.stacked
            = field_li(form, :mailing_address, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-address__line"}})
          %ul.stacked
            = field_li(form, :mailing_city, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-city__line"} })
            = field_li(form, :mailing_state, {skip_tooltip: true,required: true, field_options: {}, li_options: {class: "registrant-form__home-state-abbrev__line"}, select_options: GeoState.all.collect {|s| s.abbreviation }, field_options: {include_blank: true}})
            = field_li(form, :mailing_zip_code, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__home-zip-code__line"} })
    
      %fieldset#newui_prev_address_set.block-selector
        =checkbox_block_selector form, :change_of_address, I18n.t('activerecord.attributes.state_registrants/pa_registrant.change_of_address'), :previous_address, {required: true}
        %div.block-selector__yes-selected
          %ul.stacked
            = field_li(form, :previous_address, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-address__line"}})
          %ul.stacked
            = field_li(form, :previous_city, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-city__line"} })
            = field_li(form, :previous_state, {skip_tooltip: true,required: true, field_options: {}, li_options: {class: "registrant-form__home-state-abbrev__line"}, select_options: GeoState.all.collect {|s| s.abbreviation }, field_options: {include_blank: true}})
            = field_li(form, :previous_zip_code, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__home-zip-code__line"} })
          %ul.stacked
            = field_li(form, :previous_county, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__prev-county__line"}, select_options: StateRegistrants::PARegistrant::COUNTIES.collect(&:titleize), field_options: {include_blank: true} })

    
  
  .dynamic-step#step-5
    %fieldset
      %legend= t('txt.registration.mobile_ui.step_9.title')
  
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :change_of_party, class_name: "registrant-form__change-of-party__line", required: false}

    %br
  
    %ul.flat.party-dropdown
      = field_li(form, :party, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__party__line"}, select_options: @registrant.state_parties , field_options: {include_blank: true} })
    
    %fieldset#other_party_set
      %ul.flat.other-party
        = field_li(form, :other_party, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__other-party__line"}})
    
  
    %ul.flat.race-dropdown
      = field_li(form, :race, {skip_tooltip: true, required: false, li_options: {class: "registrant-form__race__line"}, select_options: @registrant.races, field_options: {include_blank: true} })
      
    %fieldset.phone
      %ul.stacked
        = field_li(form, :phone, {skip_tooltip: true, required: false, li_options: {class: "registrant-form__phone__line"}})
        = field_li(form, :phone_type, {skip_tooltip: true, required: false, li_options: {class: "registrant-form__phone-type__line"}, select_options: @registrant.phone_types,field_options: {include_blank: true} })
      
      = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :opt_in_sms, class_name: "registrant-form__opt-in-sms_line", required: false, field_label: t('txt.registration.opt_in_sms', :organization => h("Rock the Vote")).html_safe}
      %span.compliance= t('txt.registration.opt_in_sms_compliance', organization: h("Rock the Vote"), short_code: RockyConf.sms_short_code, terms_url: RockyConf.terms_url, privacy_url: RockyConf.privacy_url).html_safe
    
      - if @registrant.partner.partner_sms_opt_in? && !@registrant.partner.primary?
        = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :partner_opt_in_sms, class_name: "registrant-form__partner-opt-in-sms_line", required: false, field_label: t('txt.registration.opt_in_sms', :organization=>h(@registrant.partner.organization)).html_safe }
        %span.compliance= t('txt.registration.opt_in_sms_compliance', organization: h(@registrant.partner.organization), short_code: @registrant.partner.short_code, terms_url: @registrant.partner.terms_url, privacy_url: @registrant.partner.privacy_url).html_safe
      
      
    - if @registrant.email.blank?
      %fieldset
        %ul.stacked
          = field_li(form, :email, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__email__line"}})
  
    %fieldset.no_border
      = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :opt_in_email, class_name: "registrant-form__opt-in-email_line", required: false, field_label: t('txt.registration.opt_in_email', :organization => h("Rock the Vote")).html_safe}
  
      - if @registrant.partner.partner_email_opt_in && !@registrant.partner.primary?
        = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :partner_opt_in_email, class_name: "registrant-form__partner-opt-in-email_line", required: false, field_label: t('txt.registration.opt_in_email', :organization=>h(@registrant.partner.organization)).html_safe }
  
    
    - if @registrant.ask_for_partner_volunteers?
      %fieldset.no_border
        = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :partner_volunteer, class_name: "registrant-form__partner-volunteer", required: false, field_label: t('txt.registration.volunteer', :organization => h(@registrant.partner.organization)).html_safe }


    
  .dynamic-navigation
    -# .back only shown when first step, .prepare only shown when last step
    .back.back--link
      .button.rollover_button
        = link_to registrant_path(@registrant.registrant) do
          %button{type: "button"}
            %span <
    .back.back--virtual 
      .button.rollover_button
        %a 
          %button{type: "button"}
            %span <
    .next.next--virtual
      .button.rollover_button
        %a 
          %button
            %span=t 'txt.button.submit'
    .next.next--link.prepare
      = rollover_button(:next_step, I18n.t('txt.button.submit').html_safe)
    
    
