-#CTW-New UI
= render 'shared/signature_capture/scripts'
- content_for :head do
  :javascript
    $(document).ready(function() {
      function togglePenndotNumber() {
        if ($("#state_registrants_pa_registrant_confirm_no_penndot_number:checked").length > 0) {
          $("#penndot_set").hide();
          // if (!window.IS_TOUCH_ENABLED) {
          //   $("#signature_upload").show();
          // }
        } else {
          $("#penndot_set").show();
          
          // $("#signature_upload").hide();
        }              
      }

      function toggleSsn4() {
        if ($("#state_registrants_pa_registrant_confirm_no_dl_or_ssn:checked").length > 0 ) {
          $(".registrant-form__ssn4__line").hide();
        } else {
          $(".registrant-form__ssn4__line").show();
        }
      }

      function toggleOtherParty() {
        var party = $("#state_registrants_pa_registrant_party").val().toLowerCase()
        if (party=='other' || party=='otros') {
          $("#other_party_set").show();          
        } else {
          $("#other_party_set").hide();
        }        
      }
      
      $("#state_registrants_pa_registrant_party").change(toggleOtherParty)
      toggleOtherParty();
  
      function toggleAssistant() {
        if ($("#state_registrants_pa_registrant_has_assistant:checked").length > 0) {
          $("#assistant_set").show();
        } else {
          $("#assistant_set").hide();
        }        
      }
      
      
      $("#state_registrants_pa_registrant_confirm_no_penndot_number").click(togglePenndotNumber)
      togglePenndotNumber();      
      $("#state_registrants_pa_registrant_confirm_no_dl_or_ssn").click(toggleSsn4)
      toggleSsn4();      
      $("#state_registrants_pa_registrant_has_assistant").click(toggleAssistant)
      toggleAssistant();
    });

= flash_messages.html_safe
      
= form_for(@registrant, url: update_state_registrant_path(@registrant.to_param,controller.current_state)) do |form|

  = render partial: 'state_registrants/locale_selector', locals: {form: form }

  = render partial: 'state_registrants/pa/header'

  %ul.flat
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_us_citizen, class_name: "registrant-form__us-citizen__line", required: true, require_accepted: true}
  
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_will_be_18, class_name: "registrant-form__will-be-18-by-election__line", required: true, require_accepted: true}

    = render :partial=> "registrants/date_of_birth", :locals=>{:form=>form}

  %fieldset#has_penndot_set.block-selector
    =checkbox_block_selector form, :has_penndot, I18n.t('activerecord.attributes.state_registrants/pa_registrant.has_penndot'), nil, {required: true}
    %div.block-selector__yes-selected
      %fieldset#penndot_set
        %ul.flat.penndot-number
          - if @registrant.penndot_retries > 0
            - @registrant.errors.add(:penndot_number, :pa_invalid)
          = field_li(form, :penndot_number, {skip_tooltip: true, required: true, field_options: {size: 12, maxlength: 8}, li_options: {class: "registrant-form__penndot-number__line"} })
              
        %p.instructions
          = I18n.t('states.custom.pa.penndot_number_instructions')
    
  %fieldset#ssn4_set
    %ul.flat.ssn4
      = field_li(form, :ssn4, {skip_tooltip: true, required: false, li_options: {class: "registrant-form__ssn4__line"}, field_options: { maxlength: 4, style:'width:100%'} })
    
  = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_no_dl_or_ssn, class_name: "registrant-form__no-ssn4__line", required: false}
  
  %br

  %h2 
    = I18n.t('activerecord.attributes.state_registrants/pa_registrant.voter_signature_header')
  = render partial: 'shared/signature_capture/form', locals: {form: form}

    

    
  = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :change_of_party, class_name: "registrant-form__change-of-party__line", required: false}

  
  %ul.flat.party-dropdown
    = field_li(form, :party, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__party__line"}, select_options: @registrant.state_parties , field_options: {include_blank: true} })
    
  %fieldset#other_party_set
    %ul.flat.other-party
      = field_li(form, :other_party, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__other-party__line"}})
    
  
  %ul.flat.race-dropdown
    = field_li(form, :race, {skip_tooltip: true, required: false, li_options: {class: "registrant-form__race__line"}, select_options: @registrant.races, field_options: {include_blank: true} })
  

  = rollover_button(:next_step, I18n.t('activerecord.attributes.state_registrants/pa_registrant.step3_next').html_safe)  
  .back    
    = link_to t('txt.button.back').html_safe, update_state_registrant_path(@registrant.to_param, controller.prev_step)
